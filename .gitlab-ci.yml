stages:
  - config
  - deploy

aws-get-docker-login:
  script:
  - mkdir ~/.aws
  - ""
  - echo "[default]" > ~/.aws/credentials
  - echo "aws_access_key_id = $AWS_ACCESS_KEY_ID" >> ~/.aws/credentials
  - echo "aws_secret_access_key = $AWS_SECRET_ACCESS_KEY" >> ~/.aws/credentials
  - echo "[default]" > ~/.aws/config
  - echo "region = eu-west-1" >> ~/.aws/config
  - aws ecr get-login --no-include-email --region eu-west-1 --profile default > aws-docker-repository-login-command
  stage: config
  artifacts:
    expire_in: 1 day
    paths:
    - aws-docker-repository-login-command
  tags:
  - aws-cli
  only:
  - staging
  - master

docker-api-aws-push:
  dependencies:
  - aws-get-docker-login
  script:
  - docker build -t 2local-node:$CI_COMMIT_REF_NAME-$CI_PIPELINE_ID .
  - ""
  - . ./aws-docker-repository-login-command
  - docker tag 2local-node:$CI_COMMIT_REF_NAME-$CI_PIPELINE_ID 931280344517.dkr.ecr.eu-west-1.amazonaws.com/2local-node:$CI_COMMIT_REF_NAME-$CI_PIPELINE_ID
  - docker push 931280344517.dkr.ecr.eu-west-1.amazonaws.com/2local-node:$CI_COMMIT_REF_NAME-$CI_PIPELINE_ID
  stage: deploy
  services:
  - docker:dind
  tags:
  - docker-in-docker
  only:
  - staging
  - master
